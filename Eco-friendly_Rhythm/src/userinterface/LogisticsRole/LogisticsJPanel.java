/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.LogisticsRole;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.CorporateOrganization;
import Business.Organization.HeadquatersOrganization;
import Business.Organization.NGOOrganization;
import Business.Organization.Organization;
import Business.Role.CareTaker;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ExternalWorkRequest;
import Business.WorkQueue.InfoWorkRequest;
import Business.WorkQueue.PlantationWorkRequest;
import Business.WorkQueue.SocialWorkRequest;
import java.awt.CardLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.jfree.data.general.DefaultPieDataset;

/**
 * @author Alekhya
 * @author Apeksha
 * @author Shalini
 */
public class LogisticsJPanel extends javax.swing.JPanel {

    private Employee employee;
    JPanel userProcessContainer;
    Organization org;
    private EcoSystem system;
    private Network network;

    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();

    /**
     * Creates new form LogisticsJPanel
     */
    public LogisticsJPanel(JPanel userProcessContainer, UserAccount account, Organization org, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        employee = account.getEmployee();
        this.system = business;
        this.org = org;
        for (Network n : business.getNetworkList()) {
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                    if (o.getUserAccountDirectory().getUserAccountList().contains(account)) {
                        network = n;
                        break;
                    }
                }
            }
        }
        System.out.println(network + " kkkkkkkkk");
        txtName.setText(employee.getName());
        txtEmail.setText(employee.getEmailId());
        txtZipcode.setText(employee.getZip());
        dpDoB.setDate(employee.getDateOfBirth());
        if (employee.getGender() != null) {
            if (employee.getGender().equals("Male")) {
                CbGender.setSelectedIndex(0);
            } else {
                CbGender.setSelectedIndex(1);
            }
        }
        txtContact.setText(employee.getContactNumber());
        if (employee.getProfilePicture() != null) {
            profile.setIcon(new ImageIcon(employee.getProfilePicture()));
        }
        username1.setText("Welcome " + employee.getUserName() + "!");
        populateCombo();
        populateRequestTable();
        populateRequestHistoryTable();
    }

    private void populateCombo() {
        DefaultComboBoxModel dm = new DefaultComboBoxModel();
        dm.addElement("Male");
        dm.addElement("Female");
        CbGender.setModel(dm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        lblName1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblName2 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblGender1 = new javax.swing.JLabel();
        CbGender = new javax.swing.JComboBox<>();
        lblDoB1 = new javax.swing.JLabel();
        lblZipcode1 = new javax.swing.JLabel();
        txtZipcode = new javax.swing.JTextField();
        lblContact1 = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        btnProfile = new javax.swing.JButton();
        profile = new javax.swing.JLabel();
        username1 = new javax.swing.JLabel();
        logout1 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        dpDoB = new org.jdesktop.swingx.JXDatePicker();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequest = new javax.swing.JTable();
        btnProcess = new javax.swing.JButton();
        logout2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        logout3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRequestHistory = new javax.swing.JTable();

        jTabbedPane1.setBackground(new java.awt.Color(0, 51, 51));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(0, 51, 51));

        lblName1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblName1.setForeground(new java.awt.Color(255, 255, 255));
        lblName1.setText("Name:");

        txtName.setEnabled(false);
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblName2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblName2.setForeground(new java.awt.Color(255, 255, 255));
        lblName2.setText("Email:");

        txtEmail.setEditable(false);
        txtEmail.setEnabled(false);

        lblGender1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblGender1.setForeground(new java.awt.Color(255, 255, 255));
        lblGender1.setText("Gender:");

        CbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CbGender.setEnabled(false);
        CbGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbGenderActionPerformed(evt);
            }
        });

        lblDoB1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblDoB1.setForeground(new java.awt.Color(255, 255, 255));
        lblDoB1.setText("Date of Birth:");

        lblZipcode1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblZipcode1.setForeground(new java.awt.Color(255, 255, 255));
        lblZipcode1.setText("Zipcode:");

        txtZipcode.setEnabled(false);

        lblContact1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblContact1.setForeground(new java.awt.Color(255, 255, 255));
        lblContact1.setText("Contact Number:");

        txtContact.setEnabled(false);

        btnProfile.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        btnProfile.setText("Choose Profile Picture");
        btnProfile.setEnabled(false);
        btnProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfileActionPerformed(evt);
            }
        });

        profile.setOpaque(true);

        username1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        username1.setForeground(new java.awt.Color(255, 255, 255));
        username1.setText("Welcome <username>!");

        logout1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        logout1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logout.png"))); // NOI18N
        logout1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logout1MouseClicked(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(username1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logout1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblContact1)
                                    .addComponent(lblZipcode1)
                                    .addComponent(lblDoB1)
                                    .addComponent(lblGender1)
                                    .addComponent(lblName2)
                                    .addComponent(lblName1))
                                .addGap(50, 50, 50)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(dpDoB, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnProfile))
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGap(263, 263, 263))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                    .addComponent(CbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(316, 316, 316)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(311, 311, 311)
                                .addComponent(btnUpdate)
                                .addGap(111, 111, 111)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 191, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logout1)
                    .addComponent(username1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName1)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName2)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGender1)
                            .addComponent(CbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoB1)
                    .addComponent(dpDoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProfile))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblZipcode1)
                    .addComponent(txtZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblContact1)
                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnSave))
                .addGap(70, 70, 70))
        );

        jTabbedPane1.addTab("Profile", jPanel3);

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));

        tblRequest.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        tblRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Requestor", "Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequest);

        btnProcess.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        logout2.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        logout2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logout.png"))); // NOI18N
        logout2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logout2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(378, 378, 378)
                                .addComponent(btnProcess))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 789, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 40, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(logout2)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logout2)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108)
                .addComponent(btnProcess)
                .addContainerGap(186, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Request", jPanel2);

        jPanel4.setBackground(new java.awt.Color(0, 51, 51));

        logout3.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        logout3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logout.png"))); // NOI18N
        logout3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logout3MouseClicked(evt);
            }
        });

        tblRequestHistory.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        tblRequestHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Requestor", "Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblRequestHistory);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(logout3)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 789, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logout3)
                .addGap(56, 56, 56)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(310, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("History", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    public void populateRequestTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblRequest.getModel();
        dtm.setRowCount(0);
        for (InfoWorkRequest request : org.getWorkQueue().getInfoList()) {
            if (!request.getStatus().equals("Completed")) {
                Object row[] = new Object[5];
                row[0] = request.getRequestor().getName();
                row[1] = request;
                row[2] = request.getStatus();
                dtm.addRow(row);
            }
        }
// index 1 will return the object type
    }

    public void populateRequestHistoryTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblRequestHistory.getModel();
        dtm.setRowCount(0);
        for (InfoWorkRequest request : org.getWorkQueue().getInfoList()) {
            if (request.getStatus().equals("Completed")) {
                Object row[] = new Object[5];
                row[0] = request.getRequestor().getName();
                row[1] = request;
                row[2] = request.getStatus();
                dtm.addRow(row);
            }
        }
// index 1 will return the object type
    }

    private void btnProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfileActionPerformed
        // TODO add your handling code here:
        JFileChooser jFC = new JFileChooser();
        FileFilter imageFilter = new FileNameExtensionFilter(
                "Image files", ImageIO.getReaderFileSuffixes());
        jFC.setFileFilter(imageFilter);
        int chosenFile = jFC.showOpenDialog(null);
        if (chosenFile == JFileChooser.APPROVE_OPTION) {
            File file = jFC.getSelectedFile();
            try {
                BufferedImage img = null;
                employee.setProfilePicture(file.getAbsolutePath());
                System.out.println(file.getAbsolutePath());
                img = ImageIO.read(file);
                Image resizedImg = img.getScaledInstance(80,
                        60, Image.SCALE_SMOOTH);
                profile.setIcon(new ImageIcon(resizedImg));
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnProfileActionPerformed

    private void logout1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logout1MouseClicked
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_logout1MouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        txtName.setEnabled(true);
        txtZipcode.setEnabled(true);
        txtContact.setEnabled(true);
        btnProfile.setEnabled(true);
        CbGender.setEnabled(true);
        dpDoB.setEnabled(true);

        btnSave.setEnabled(true);
        btnUpdate.setEnabled(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

        employee.setName(txtName.toString());
        employee.setGender(CbGender.toString());
        employee.setContactNumber(txtContact.toString());
        employee.setZip(txtZipcode.toString());
        employee.setDateOfBirth(dpDoB.getDate());
        try {
            int num = Integer.parseInt(txtContact.getText());
            int zip = Integer.parseInt(txtZipcode.getText());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Enter valid Numbers!", "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if (txtName.getText() == null || txtName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter Valid Name!", "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if (new Date().compareTo(dpDoB.getDate()) < 0) {
            JOptionPane.showMessageDialog(null, "Enter Valid DOB!", "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        if (employee.getContactNumber() != null && employee.getZip() != null && employee.getDateOfBirth() != null && employee.getProfilePicture() != null) {
            employee.setCompleteProfile(true);
        }
        txtName.setEnabled(false);
        txtZipcode.setEnabled(false);
        txtContact.setEnabled(false);
        btnProfile.setEnabled(false);
        CbGender.setEnabled(false);
        dpDoB.setEnabled(false);
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);

        dB4OUtil.storeSystem(system);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void CbGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbGenderActionPerformed
        // TODO add your handling code here:
        DefaultComboBoxModel dm = new DefaultComboBoxModel();
        dm.addElement("Female");
        dm.addElement("Male");
        CbGender.setModel(dm);
    }//GEN-LAST:event_CbGenderActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        if (employee.isCompleteProfile() == false) {
            JOptionPane.showMessageDialog(null, "Please complete your profile first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int selectedRow = tblRequest.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!");
            return;
        }
        InfoWorkRequest request = (InfoWorkRequest) tblRequest.getValueAt(selectedRow, 1);
        request.setStatus("Completed");
        DefaultPieDataset dataset = new DefaultPieDataset();
        if (request.getNetwork() != null) {
            //plantation
            int informer = 0;
            int corporate = 0;
            int ngo = 0;
            for (UserAccount ua : network.getUserAccountDirectory().getUserAccountList()) {
                if (ua.getRole() instanceof CareTaker) {
                    for (PlantationWorkRequest pr : ua.getEmployee().getVolunteerRequestList()) {
                        informer += pr.getTreeCount();
                    }
                    for (SocialWorkRequest sr : ua.getEmployee().getSocialRequestList()) {
                        if (sr.getOrg() instanceof CorporateOrganization) {
                            corporate += sr.getTreeCount();
                        } else {
                            ngo += sr.getTreeCount();
                        }
                    }
                }
            }
            dataset.setValue("Informer", informer);
            dataset.setValue("Corporate", corporate);
            dataset.setValue("NGO", ngo);
            System.out.println("Logistics " + informer + " " + corporate + " " + ngo);
        } else if (request.getUa() != null) {
            //user
            int tip = 0;
            int plants = 0;
            for (UserAccount ua : network.getUserAccountDirectory().getUserAccountList()) {
                if (ua.getUsername().equals(request.getUa().getUsername())) {
                    plants = ua.getUser().getPlantationRequestList().size();
                }
            }
            for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                    if (o instanceof HeadquatersOrganization) {
                        for (ExternalWorkRequest r : o.getWorkQueue().getWorkRequestList()) {
                            if (r.getUser().getUserName().equals(request.getUa().getUsername())) {
                                tip++;
                            }
                        }
                    }
                }
            }
            dataset.setValue("Tips", tip);
            dataset.setValue("Plantation", plants);
            System.out.println("Logistics " + 5 + " " + 7);
        } else {
            //organization
            Map<String, Integer> map = new HashMap<>();
            for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                    if (o instanceof CorporateOrganization || o instanceof NGOOrganization) {
                        map.put(o.getName(), 0);
                    }
                }
            }

            for (UserAccount ua : network.getUserAccountDirectory().getUserAccountList()) {
                if (ua.getRole() instanceof CareTaker) {
                    for (SocialWorkRequest sr : ua.getEmployee().getSocialRequestList()) {
                        map.put(sr.getOrg().getName(), map.get(sr.getOrg().getName()) + sr.getTreeCount());
                    }
                }
            }

            for (Entry<String, Integer> entry : map.entrySet()) {
                dataset.setValue(entry.getKey(), entry.getValue());
            }
            System.out.println("Logistics ");
        }
        request.setPieChart(dataset);
        JOptionPane.showMessageDialog(null, "Request Processed!", "Info", JOptionPane.INFORMATION_MESSAGE);
        populateRequestHistoryTable();
        populateRequestTable();

        dB4OUtil.storeSystem(system);
    }//GEN-LAST:event_btnProcessActionPerformed

    private void logout2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logout2MouseClicked
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_logout2MouseClicked

    private void logout3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logout3MouseClicked
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_logout3MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CbGender;
    private javax.swing.JButton btnProcess;
    private javax.swing.JButton btnProfile;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private org.jdesktop.swingx.JXDatePicker dpDoB;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblContact1;
    private javax.swing.JLabel lblDoB1;
    private javax.swing.JLabel lblGender1;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblName2;
    private javax.swing.JLabel lblZipcode1;
    private javax.swing.JLabel logout1;
    private javax.swing.JLabel logout2;
    private javax.swing.JLabel logout3;
    private javax.swing.JLabel profile;
    private javax.swing.JTable tblRequest;
    private javax.swing.JTable tblRequestHistory;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtZipcode;
    private javax.swing.JLabel username1;
    // End of variables declaration//GEN-END:variables
}
