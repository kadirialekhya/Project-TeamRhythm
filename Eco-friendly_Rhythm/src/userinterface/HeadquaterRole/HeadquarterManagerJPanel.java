/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HeadquaterRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.SupplierOrganization;
import Business.User.User;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CordinatorWorkRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import userinterface.Volunteer.InformerJPanel;

/**
 *
 * @author Am3y
 *
 */
public class HeadquarterManagerJPanel extends javax.swing.JPanel {

    private Employee manager;
    private JPanel userProcessContainer;
    private WorkQueue requestQueue;
    Enterprise enterprise;
    Organization org;

    /**
     * Creates new form Coordinator
     */
    public HeadquarterManagerJPanel(JPanel userProcessContainer, UserAccount account, Organization org, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        requestQueue = org.getWorkQueue();
        manager = account.getEmployee();
        this.org = org;
        populatePoolTable();
        populateAssignedTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        btnProfile = new javax.swing.JPanel();
        lblName7 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        username7 = new javax.swing.JLabel();
        logout7 = new javax.swing.JLabel();
        profile = new javax.swing.JLabel();
        btnProfile7 = new javax.swing.JButton();
        txtEmail = new javax.swing.JTextField();
        lblName8 = new javax.swing.JLabel();
        lblGender6 = new javax.swing.JLabel();
        CbGender = new javax.swing.JComboBox<>();
        lblDoB6 = new javax.swing.JLabel();
        lblZipcode6 = new javax.swing.JLabel();
        txtZipcode = new javax.swing.JTextField();
        lblContact6 = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        btnUpdate7 = new javax.swing.JButton();
        btnSave7 = new javax.swing.JButton();
        dpDoB = new org.jdesktop.swingx.JXDatePicker();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestPoolTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        assignedRequestTable = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();

        btnProfile.setBackground(new java.awt.Color(0, 153, 153));

        lblName7.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        lblName7.setForeground(new java.awt.Color(255, 255, 255));
        lblName7.setText("Name:");

        txtName.setEnabled(false);

        username7.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        username7.setForeground(new java.awt.Color(255, 255, 255));
        username7.setText("Welcome <username>!");

        logout7.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        logout7.setForeground(new java.awt.Color(255, 255, 255));
        logout7.setText("Logout");
        logout7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logout7MouseClicked(evt);
            }
        });

        profile.setOpaque(true);

        btnProfile7.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        btnProfile7.setText("Choose Profile Picture");
        btnProfile7.setEnabled(false);
        btnProfile7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfile7ActionPerformed(evt);
            }
        });

        txtEmail.setEditable(false);
        txtEmail.setEnabled(false);

        lblName8.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        lblName8.setForeground(new java.awt.Color(255, 255, 255));
        lblName8.setText("Email:");

        lblGender6.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        lblGender6.setForeground(new java.awt.Color(255, 255, 255));
        lblGender6.setText("Gender:");

        CbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CbGender.setEnabled(false);

        lblDoB6.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        lblDoB6.setForeground(new java.awt.Color(255, 255, 255));
        lblDoB6.setText("Date of Birth:");

        lblZipcode6.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        lblZipcode6.setForeground(new java.awt.Color(255, 255, 255));
        lblZipcode6.setText("Zipcode:");

        txtZipcode.setEnabled(false);

        lblContact6.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        lblContact6.setForeground(new java.awt.Color(255, 255, 255));
        lblContact6.setText("Contact Number:");

        txtContact.setEnabled(false);

        btnUpdate7.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        btnUpdate7.setText("Update");
        btnUpdate7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate7ActionPerformed(evt);
            }
        });

        btnSave7.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        btnSave7.setText("Save");
        btnSave7.setEnabled(false);
        btnSave7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout btnProfileLayout = new javax.swing.GroupLayout(btnProfile);
        btnProfile.setLayout(btnProfileLayout);
        btnProfileLayout.setHorizontalGroup(
            btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnProfileLayout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(dpDoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(643, Short.MAX_VALUE))
            .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(btnProfileLayout.createSequentialGroup()
                    .addGap(28, 28, 28)
                    .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(btnProfileLayout.createSequentialGroup()
                            .addGap(57, 57, 57)
                            .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(btnProfileLayout.createSequentialGroup()
                                    .addComponent(lblName7)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtName))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnProfileLayout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(lblName8)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(408, 408, 408)
                            .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(65, 65, 65))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnProfileLayout.createSequentialGroup()
                            .addGap(577, 577, 577)
                            .addComponent(username7, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31)
                            .addComponent(logout7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(btnProfileLayout.createSequentialGroup()
                            .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(btnProfileLayout.createSequentialGroup()
                                    .addGap(280, 280, 280)
                                    .addComponent(btnUpdate7)
                                    .addGap(147, 147, 147)
                                    .addComponent(btnSave7, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(btnProfileLayout.createSequentialGroup()
                                    .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(btnProfileLayout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(btnProfileLayout.createSequentialGroup()
                                                    .addGap(36, 36, 36)
                                                    .addComponent(lblGender6))
                                                .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblZipcode6)
                                                    .addComponent(lblDoB6))))
                                        .addComponent(lblContact6))
                                    .addGap(21, 21, 21)
                                    .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(btnProfileLayout.createSequentialGroup()
                                            .addComponent(CbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnProfile7))
                                        .addGroup(btnProfileLayout.createSequentialGroup()
                                            .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(0, 0, Short.MAX_VALUE)))))
                            .addGap(205, 205, 205)))
                    .addGap(29, 29, 29)))
        );
        btnProfileLayout.setVerticalGroup(
            btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnProfileLayout.createSequentialGroup()
                .addGap(244, 244, 244)
                .addComponent(dpDoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(309, Short.MAX_VALUE))
            .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(btnProfileLayout.createSequentialGroup()
                    .addGap(27, 27, 27)
                    .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(logout7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(username7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(34, 34, 34)
                    .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(btnProfileLayout.createSequentialGroup()
                            .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(btnProfileLayout.createSequentialGroup()
                            .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblName7)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                            .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblName8))
                            .addGap(24, 24, 24)
                            .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblGender6)
                                .addComponent(CbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnProfile7))
                            .addGap(23, 23, 23)
                            .addComponent(lblDoB6)
                            .addGap(34, 34, 34)
                            .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblZipcode6)
                                .addComponent(txtZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(32, 32, 32)
                            .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblContact6)
                                .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(154, 154, 154)))
                    .addGroup(btnProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnUpdate7)
                        .addComponent(btnSave7))
                    .addGap(28, 28, 28)))
        );

        jTabbedPane1.addTab("Profile", btnProfile);

        requestPoolTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Type", "Raised By", "Assigned To", "Dated", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(requestPoolTable);

        assignedRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Type", "Raised By", "Assigned To", "Dated", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(assignedRequestTable);

        btnAssign.setText("Assign to me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 778, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 778, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(336, 336, 336)))
                .addContainerGap(47, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(393, 393, 393))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Request", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populatePoolTable() {
        DefaultTableModel dtm = (DefaultTableModel) requestPoolTable.getModel();
        dtm.setRowCount(0);
        for (CordinatorWorkRequest request : requestQueue.getRequestList()) {
            if (request.getCoordinatorAssigned() == null) {
                System.out.println("inside loop");
                Object row[] = new Object[5];
                row[0] = request;
                row[1] = request.getEmployee().getName();
                row[2] = "unassigned";
                row[3] = request.getRequestDate();
                row[4] = request.getStatus();
                dtm.addRow(row);
            }
        }
        for (WorkRequest request : requestQueue.getWorkRequestList()) {
            if (!(request instanceof CordinatorWorkRequest)) {
                System.out.println("request found");
                if (request.getCoordinatorAssigned() == null) {
                    Object row[] = new Object[5];
                    row[0] = request;
                    row[1] = request.getUser().getName();
                    row[2] = "unassigned";
                    row[3] = request.getRequestDate();
                    row[4] = request.getStatus();
                    dtm.addRow(row);
                }
            }
        }

    }

    public void populateAssignedTable() {
        DefaultTableModel dtm = (DefaultTableModel) assignedRequestTable.getModel();
        dtm.setRowCount(0);
        for (WorkRequest request : manager.getUserRequestList()) {
            if (!(request instanceof CordinatorWorkRequest)) {
                if (request.getCoordinatorAssigned().getUserName().equals(manager.getUserName())) {
                    Object row[] = new Object[5];
                    row[0] = request;
                    row[1] = request.getUser().getName();
                    row[2] = request.getCoordinatorAssigned().getName();
                    row[3] = request.getRequestDate();
                    row[4] = request.getStatus();
                    dtm.addRow(row);
                }
            }
        }
        for (CordinatorWorkRequest request : manager.getUserRequestList()) {
            if (request.getCoordinatorAssigned().getUserName().equals(manager.getUserName())) {
                Object row[] = new Object[5];
                row[0] = request;
                row[1] = request.getEmployee().getName();
                row[2] = request.getCoordinatorAssigned().getName();
                row[3] = request.getRequestDate();
                row[4] = request.getStatus();
                dtm.addRow(row);
            }
        }
    }

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestPoolTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!");
            return;
        }
        if (requestPoolTable.getValueAt(selectedRow, 2).equals("unassigned")) {
            System.out.println(requestPoolTable.getValueAt(selectedRow, 0));
            CordinatorWorkRequest request = (CordinatorWorkRequest) requestPoolTable.getValueAt(selectedRow, 0);
            request.setCoordinatorAssigned(manager);
            request.setStatus("Assigned to " + manager.getName());
            manager.addUserRequest(request);
            JOptionPane.showMessageDialog(null, "Request assigned ", "Info", JOptionPane.INFORMATION_MESSAGE);
            populatePoolTable();
            populateAssignedTable();
        } else {
            JOptionPane.showMessageDialog(null, "The request is already assigned!", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:

        int selectedRow = assignedRequestTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request!");
            return;
        }

        if (assignedRequestTable.getValueAt(selectedRow, 0) instanceof CordinatorWorkRequest) {
            CordinatorWorkRequest request = (CordinatorWorkRequest) assignedRequestTable.getValueAt(selectedRow, 0);
            System.out.println("HM: "+request.getEmployee());
            System.out.println(request.getStatus());
            for(Organization o:enterprise.getOrganizationDirectory().getOrganizationList()){
                if(o instanceof SupplierOrganization){
                    org=o;
                    break;
                }
            }
            InternalProcessJPanel panel = new InternalProcessJPanel(userProcessContainer, org, enterprise, request);
            userProcessContainer.add("ProcessJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } else {
            WorkRequest request = (WorkRequest) assignedRequestTable.getValueAt(selectedRow, 0);
            ProcessJPanel panel = new ProcessJPanel(userProcessContainer, request);
            userProcessContainer.add("ProcessJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }

    }//GEN-LAST:event_btnProcessActionPerformed

    private void btnProfile7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfile7ActionPerformed
        // TODO add your handling code here:
        JFileChooser jFC = new JFileChooser();
        FileFilter imageFilter = new FileNameExtensionFilter(
                "Image files", ImageIO.getReaderFileSuffixes());
        jFC.setFileFilter(imageFilter);
        int chosenFile = jFC.showOpenDialog(null);
        if (chosenFile == JFileChooser.APPROVE_OPTION) {
            File file = jFC.getSelectedFile();
            try {
                BufferedImage img = null;
                manager.setProfilePicture(file);
                img = ImageIO.read(file);
                Image resizedImg = img.getScaledInstance(80,
                        60, Image.SCALE_SMOOTH);
                profile.setIcon(new ImageIcon(resizedImg));
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnProfile7ActionPerformed

    private void btnUpdate7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate7ActionPerformed
        // TODO add your handling code here:
        txtName.setEnabled(true);
        txtZipcode.setEnabled(true);
        txtContact.setEnabled(true);
        btnProfile.setEnabled(true);
        CbGender.setEnabled(true);
        dpDoB.setEnabled(true);

        btnSave7.setEnabled(true);
        btnUpdate7.setEnabled(false);
    }//GEN-LAST:event_btnUpdate7ActionPerformed

    private void btnSave7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave7ActionPerformed
        // TODO add your handling code here:

        manager.setName(txtName.toString());
        manager.setGender(CbGender.toString());
        manager.setContactNumber(txtContact.toString());
        manager.setZip(txtZipcode.toString());
        manager.setDateOfBirth(dpDoB.getDate());

        txtName.setEnabled(false);
        txtZipcode.setEnabled(false);
        txtContact.setEnabled(false);
        btnProfile.setEnabled(false);
        CbGender.setEnabled(false);
        dpDoB.setEnabled(false);
        btnSave7.setEnabled(false);
        btnUpdate7.setEnabled(true);
    }//GEN-LAST:event_btnSave7ActionPerformed

    private void logout7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logout7MouseClicked
        // TODO add your handling code here:
        
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_logout7MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CbGender;
    private javax.swing.JTable assignedRequestTable;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnProcess;
    private javax.swing.JPanel btnProfile;
    private javax.swing.JButton btnProfile7;
    private javax.swing.JButton btnSave7;
    private javax.swing.JButton btnUpdate7;
    private org.jdesktop.swingx.JXDatePicker dpDoB;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblContact6;
    private javax.swing.JLabel lblDoB6;
    private javax.swing.JLabel lblGender6;
    private javax.swing.JLabel lblName7;
    private javax.swing.JLabel lblName8;
    private javax.swing.JLabel lblZipcode6;
    private javax.swing.JLabel logout7;
    private javax.swing.JLabel profile;
    private javax.swing.JTable requestPoolTable;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtZipcode;
    private javax.swing.JLabel username7;
    // End of variables declaration//GEN-END:variables
}
